线程模块，浪导讲
1、概念理解：
"""
·假定你经营着一家物业管理公司。最初，业务量很小，事事都需要你亲力亲为，给老张家修完暖气管道，立马再去老李家换电灯泡——这叫单线程，所有的工作都得顺序执行。
·后来业务拓展了，你雇佣了几个工人，这样，你的物业公司就可以同时为多户人家提供服务了——这叫多线程，你是主线程。
·工人们使用的工具，是物业管理公司提供的，大家共享——这叫多线程资源共享。
·工人们在工作中都需要管钳，可是管钳只有一把——这叫冲突。解决冲突的办法有很多，比如排队、等同事用完后的微信通知等——这叫线程同步。
·业务不忙的时候，你就在办公室喝喝茶。下班时间一到，你群发微信，所有的工人不管手头的工作是否完成，都立马撂下工具，跟你走人。因此如果有必要，你得避免不要在工人正忙着的时候发下班的通知——这叫线程守护属性设置和管理。
·再后来，你的公司规模扩大了，同时为很多生活社区服务，你在每个生活社区设置了分公司，分公司由分公司经理管理，运营机制和你的总公司几乎一模一样——这叫多进程，总公司叫主进程，分公司叫子进程。
·总公司以及各个分公司之间，工具都是独立的，不能借用、混用——这叫进程间不能共享资源。各个分公司之间可以通过专线电话联系——这叫管道。各个分公司之间还可以通过公司公告栏交换信息——这叫共享内存。
分公司可以跟着总公司一起下班，也可以把当天的工作全部做完之后再下班——这叫守护进程设置。
"""
2、创建并使用线程
使用 threading 模块的 Thread 类，可以快速创建并启动线程。当然，创建线程之前，你得先把交给线程去做的工作，写成一个函数，我们管这个函数叫线程函数
threading.Thread 类有以下方法和属性：
对象              描述
name           线程（属性名）
ident          线程标识符（属性）
daemon         线程是否是守护线程（属性）
start()        开启线程
join()         等待至线程终止，或超过参数指定的时间
setDaemon()    设置线程是否是守护线程
getName()      返回线程名
isAlive()      判断线程是否还在运行
isDaemon()     判断线程是否是守护线程
run()          定义线程功能的方法（通常在子类中被应用开发者重写）

3、 线程同步
3.1 线程锁 Lock
3.2 信号量 Semaphore
3.3 事件Event
3.4 条件 Condition